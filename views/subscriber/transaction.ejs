<%- include('../partials/subscriber/header.ejs') %>
    <%- include('../partials/subscriber/navbar.ejs') %>

		<style>
			.btn-fixed-width {
				width: 80px;
				min-width: 60px;
				text-align: center;
			}
			.dropdown {
				position: relative;
				display: inline-block;
			}
		
			.dropdown-btn {
				cursor: pointer;
			}
	
		
			.dropdown-content {
				display: none;
				position: absolute;
				top: 120%;
				left: -50%;
				background-color: white;
				min-width: 100px;
				max-width: 160px;
				box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
				border-radius: 5px;
				z-index: 1;
			}
		
			.dropdown-content a {
				color: black;
				padding: 12px 16px;
				text-decoration: none;
				display: block;
			}
		
			.dropdown-content a:hover {
				background-color: #f1f1f1;
			}

			.container-div {
			    display: flex;
			    justify-content: flex-end;
			}
		</style>
		<!-- Main Content -->
        <main >
            <div class="content">
				<div class="container my-2">
					<div class="d-flex flex-wrap justify-content-center gap-2" style="max-width: 600px; margin: 0 auto;">
					  <a type="button" href="/subscriber/transaction/income" class="text-decoration-none btn <% if (trans === 'income' ) { %> btn-dark <% } else {%> btn-secondary <% } %> flex-grow-1" id="btnIncome" >Income</a>
					  <a type="button" href="/subscriber/transaction/expense" class="text-decoration-none btn <% if (trans === 'expense' ) { %> btn-dark <% } else {%> btn-secondary <% } %> flex-grow-1" id="btnExpense" >Expense</a>
					</div>
				</div>

				<div class="d-flex justify-content-between align-items-center mb-2">
					<h2><% if (trans === 'income' ) { %> Income <% } else {%> Expense <% } %> Transactions</h2>
					<button class="btn btn-primary" data-bs-toggle="modal"
					data-bs-target="#addNewTransaction">
						Add New
					</button>
				</div>
				<div class="container-div my-2">
	
					<div class="d-flex me-3">
						<input type="text" class="form-control me-2" placeholder="Search..." id="searchInput" onkeydown="searchKey(event)">
						<button class="btn btn-primary d-flex align-items-center" onclick="performSearch()"><i class="fas fa-search ms-2"></i></button>
					</div>
					<div class="dropdown me-2">
						<a class="dropdown-btn btn btn-primary d-flex align-items-center" onclick="toggleDropdown('dropdown-menu-category')">
							<i class="fas fa-filter"></i> Category
						</a>
						<div class="dropdown-content" id="dropdown-menu-category">
							<button class="btn btn-light w-100 mb-1" onclick="filterCategory('all')">
								ALL
							  </button>
							<% for (let i = 0; i < category.length; i++) { %>
							  <button class="btn btn-light w-100 mb-1" onclick="filterCategory('<%= category[i].id %>')">
								<%= category[i].name.toUpperCase() %>
							  </button>
							<% } %>
						</div>
					</div>
					<div class="dropdown">
						<a class="dropdown-btn btn btn-primary d-flex align-items-center" onclick="toggleDropdown('dropdown-menu')">
							<i class="fas fa-filter"></i> Date
						</a>
						<div class="dropdown-content" id="dropdown-menu">
							<button class="btn btn-light w-100 mb-1" onclick="filterDate(0, 'month')">All</button>
							<button class="btn btn-light w-100 mb-1" onclick="filterDate(1, 'day')">Today</button>
							<button class="btn btn-light w-100 mb-1" onclick="filterDate(1, 'week')">This Week</button>
							<button class="btn btn-light w-100 mb-1" onclick="filterDate(1, 'month')">This Month</button>
							<button class="btn btn-light w-100 mb-1" onclick="filterDate(7, 'day')">Last 7 Days</button>
							<button class="btn btn-light w-100 mb-1" onclick="filterDate(30, 'day')">Last 30 Days</button>
							<button class="btn btn-light w-100 mb-1" onclick="filterDate(-1, 'month')">Last Month</button>
							<button class="btn btn-light w-100 mb-1" onclick="filterDate(3, 'month')">Last 3 Months</button>
						</div>
					</div>
				</div>

				<div class="table-responsive">
					<table class="table table-striped table-hover">
						<thead class="table-dark">
						  <tr>
							<th scope="col">#</th>
							<th scope="col">Description</th>
							<th scope="col">Amount</th>
							<th scope="col">Date</th>
							<th scope="col">Category</th>
							<th scope="col">Created By</th>
							<th scope="col">Actions</th>
						  </tr>
						</thead>
						<tbody>
							<tbody id="transactionTable">
								<!-- Dynamic rows go here -->
								<% for (let i=0; i < transaction.length; i++) { %>
									<tr>
										<td>
											<%= i + 1 %>
										</td>
	
										<td>
											<%= transaction[i].description %>
										</td>
										<td>
											<% let formattedAmount = transaction[i].amount.toLocaleString(); %>

											<% if (transaction[i].baseCurrency === 'MMK') { %>
											    <%= formattedAmount %> ks
											<% } else if (transaction[i].baseCurrency === 'USD') { %>
											    $ <%= formattedAmount %>
											<% } else { %>
											    <%= formattedAmount %> <%= transaction[i].baseCurrency %>
											<% } %>

										</td>
										<td>
											<%= new Date(trans === 'income' ? transaction[i].incomeDate : transaction[i].expenseDate)
											    .toLocaleString('en-US', { 
											        day: '2-digit', 
											        month: 'short', 
											        year: 'numeric', 
											        hour: '2-digit', 
											        minute: '2-digit', 
											        second: '2-digit', 
											        hour12: true 
											    }) 
											%>
										</td>
	
										<td>
											<%= transaction[i].category %>
										</td>
										<td>
											<%= transaction[i].createdBy %>
										</td>
										<td>
											<div class="d-flex flex-nowrap">
												<a href="/subscriber/transaction/<%= trans %>/detail/<%= transaction[i].id %>?trans=<%= trans %>"
													class="btn btn-primary btn-sm btn-fixed-width me-1">View</a>
												<a href="/subscriber/transaction/<%= trans %>/update/<%= transaction[i].id %>?trans=<%= trans %>"
													class="btn btn-warning btn-sm btn-fixed-width me-1">Edit</a>
											</div>
										</td>
									</tr>
									<% } %>
							</tbody>
						</tbody>
					</table>
				</div>
				  
            </div>
        </main>
		<div class="modal fade" id="addNewTransaction" tabindex="-1" aria-labelledby="addNewTransactionModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addNewTransactionModalLabel">Add New Category</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addNewTransactionForm" action="/subscriber/transaction/<%= trans %>/create" method="POST" onsubmit="submitForm(event)">
                            <div class="mb-3">
                                <label for="transDescription" class="form-label">Description</label>
                                <input type="text" class="form-control inputRequired" maxlength="100" name="description" id="transDescription"
                                    placeholder="Enter description" value="" oninput="checkInputs('transDescriptionError', 'transDescription')" required>
								<p id="transDescriptionError" class="mt-2 d-none text-danger">*Description can't exceed 100 characters!</p>
                            </div>
							<div class="mb-3">
                                <label for="transAmount" class="form-label">Amount</label>
                                <input type="number" class="form-control inputRequired" maxlength="11" name="amount" id="transAmount"
                                    placeholder="Enter amount" value="" oninput="checkInputs('transAmountError', 'transAmount')" required>
								<p id="transAmountError" class="mt-2 d-none text-danger">*Amount can't exceed 11 characters!</p>
                            </div>
							<div class="mb-3">
                                <label for="transCategory" class="form-label">Category</label>
                                <select id="transCategory" name="catId" class="form-select inputRequired" required>

                                    <% category.forEach(option => { %>
										<option value="<%= option.id %>"><%= option.name %></option>
									<% }); %>
                                </select>
                            </div>
							<div class="mb-3">
                                <label for="transDate" class="form-label">Date</label>
                                <input type="datetime-local" class="form-control"  name=<% if (trans === 'income' ) { %> "incomeDate" <% } else {%> "expenseDate" <% } %> id="transDate"
                                    placeholder="Select date" value="" required>
                            </div>
                            <button type="submit" id="addBtn" class="btn btn-primary w-100">Add Transaction</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
		<script>
			const form = document.getElementById('addNewTransactionForm');
            const addButton = document.getElementById('addBtn');
            const inputs = form.querySelectorAll('.inputRequired');
            function checkInputs(messageBox, inputField) {
                let allFilled = true;
                inputs.forEach(index => {
                if (!index.value.trim()) {
                    allFilled = false;
                }
                });
                addButton.disabled = !allFilled;
				const message = document.getElementById(messageBox)
				const input = document.getElementById(inputField)
				if (input.value.length === parseInt(input.maxLength)) {
			        message.classList.remove('d-none');
			    } else {
			        message.classList.add('d-none');
			    }
            }


            function submitForm(event) {
			    addButton.disabled = true;
			    addButton.textContent = 'Submitting...';
			}

			function toggleDropdown(dropdown_menu) {
			    let dropdown = document.getElementById(dropdown_menu);
			    let isVisible = dropdown.style.display === "block";

			    document.querySelectorAll(".dropdown-content").forEach(menu => {
			        menu.style.display = "none";
			    });

			    if (!isVisible) {
			        dropdown.style.display = "block";
			    }
			}
	
			function searchKey(event){
				if (event.key === 'Enter') {
					performSearch();
				}
			}
			
			window.onclick = function (event) {
				if (!event.target.matches('.dropdown-btn')) {
					let dropdowns = document.getElementsByClassName("dropdown-content");
					for (let i = 0; i < dropdowns.length; i++) {
						let openDropdown = dropdowns[i];
						if (openDropdown.style.display === "block") {
							openDropdown.style.display = "none";
						}
					}
				}
			};
			function performSearch() {
			    let input = document.getElementById("searchInput").value.trim();
			    let url = new URL(window.location.href);
			    
			    if (input) {
			        url.searchParams.set("search", input);
			    } else {
			        url.searchParams.delete("search");
			    }
			    window.location.href = url.toString();
			}

			function filterCategory(category_name) {
			    let url = new URL(window.location.href);
			    if (category_name && category_name !== 'all') {
			        url.searchParams.set("catId", category_name);
			    } else {
			        url.searchParams.delete("catId");
			    }
			    window.location.href = url.toString();
			}

			function filterDate(num, type) {
			    let url = new URL(window.location.href);
			    if (num && type && num !== 0) {
			        url.searchParams.set("num", num);
					url.searchParams.set("type", type);
			    } else {
			        url.searchParams.delete("num");
					url.searchParams.delete("type");
			    }
			    window.location.href = url.toString();
			}

		</script>
        <%- include('../partials/subscriber/footer.ejs') %>