<%- include('../partials/subscriber/header.ejs') %>
    <%- include('../partials/subscriber/navbar.ejs') %>

		<style>
			.btn-fixed-width {
				width: 80px;
				min-width: 60px;
				text-align: center;
			}
			.dropdown {
				position: relative;
				display: inline-block;
			}
		
			.dropdown-btn {
				cursor: pointer;
			}
	
		
			.dropdown-content {
				display: none;
				position: absolute;
				top: 120%;
				left: -50%;
				background-color: white;
				min-width: 100px;
				max-width: 160px;
				box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
				border-radius: 5px;
				z-index: 1;
			}
		
			.dropdown-content a {
				color: black;
				padding: 12px 16px;
				text-decoration: none;
				display: block;
			}
		
			.dropdown-content a:hover {
				background-color: #f1f1f1;
			}

			.container-div {
			    display: flex;
			    justify-content: flex-end;
			}

			.page-item a:hover {
		    	cursor: pointer;
			}
			.dropdown-menu {
			    border-radius: 0.5rem;
			    border: 1px solid rgba(0,0,0,0.08);
			}

			.form-control:focus {
			    box-shadow: 0 0 0 0.25rem rgba(13,110,253,0.15);
			}

			.btn-primary:focus {
			    box-shadow: 0 0 0 0.25rem rgba(13,110,253,0.15);
			}

			.dropdown-item:hover {
			    background-color: rgba(13,110,253,0.1);
			}
			.table-responsive {
		        overflow-x: auto;
		        -webkit-overflow-scrolling: touch;
		    }
		    
		    .text-success {
		        color: green !important;
		    }
		    @media (max-width: 768px) {
		        .table th, .table td {
		            padding: 0.5rem;
		            font-size: 0.875rem;
		        }
		        
		        .btn-sm {
		            padding: 0.25rem 0.5rem;
		            font-size: 0.75rem;
		        }
		    }
		</style>
		<!-- Main Content -->
        <main >
            <div class="content">
				<div class="container my-2">
					<div class="d-flex flex-wrap justify-content-center gap-2" style="max-width: 600px; margin: 0 auto;">
						<a type="button" href="/subscriber/transaction/income" 
						   class="text-decoration-none btn <% if (trans === 'income') { %> btn-dark <% } else { %> btn-secondary <% } %> flex-grow-1" 
						   id="btnIncome" onclick="handleClick('income', event)">Income</a>
						<a type="button" href="/subscriber/transaction/expense" 
						   class="text-decoration-none btn <% if (trans === 'expense') { %> btn-dark <% } else { %> btn-secondary <% } %> flex-grow-1" 
						   id="btnExpense" onclick="handleClick('expense', event)">Expense</a>
					</div>
					
				</div>
				<% if (errorMessage) { %>
					<div id="errorBox" class="alert alert-danger" role="alert">
						<%= errorMessage %>
					</div>
					<% } %>
					<% if (successMessage) { %>
					<div id="successBox" class="alert alert-success" role="alert">
						<%= successMessage %>
					</div>
					<% } %>
				<div class="d-flex justify-content-between align-items-center mb-2">
					<h2><% if (trans === 'income' ) { %> Income <% } else if (trans === 'expense') {%> Expense <% } else if (trans === 'all') {%> All <% } %> Transactions</h2>
					<% if (trans !== 'all') { %>
						<button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addNewTransaction">
							Add New
						</button>
					<% } %>
				</div>
				
				<div class="container-div my-2">
					<div class="row align-items-center">

						<!-- Search Bar -->
						<div class="col-auto mb-2">
							<div class="d-flex">
								<input type="text" 
									   class="form-control me-2" 
									   placeholder="Search..." 
									   id="searchInput" 
									   onkeydown="searchKey(event)"
									   style="width: 250px;">
								<button class="btn btn-primary d-flex align-items-center px-3" onclick="performSearch()">
									<i class="fas fa-search"></i>
								</button>
							</div>
						</div>


						<!-- Filter Buttons -->
						<div class="col-auto me-auto mb-2">
							<div class="d-flex gap-2">
								<div class="btn-group">
									<% if (trans !== 'all') { %>
										<button type="button" 
												class="btn btn-primary dropdown-toggle" 
												data-bs-toggle="dropdown" 
												aria-expanded="false">
											<i class="fas fa-filter me-1"></i>Category
										</button>
									<% } %>
									<ul class="dropdown-menu dropdown-menu-end shadow-sm" id="dropdown-menu-category" style="max-height: 280px; overflow-y: auto;">
										<!-- Search Bar -->
										<% if (category.length > 8 ) { %>
											<li class="p-2">
												<input type="text" class="form-control" id="categorySearch" placeholder="Search category..." onkeyup="filterCategories()">
											</li>
										<%} %>
										
										<!-- ALL Button -->
										<button class="dropdown-item btn btn-light w-100 mb-1" onclick="filterCategory('all')">
											ALL
										</button>
										<% for (let i = 0; i < category.length; i++) { %>
											<button class="dropdown-item btn btn-light w-100 mb-1 category-item" 
													onclick="filterCategory('<%= category[i].id %>')" 
													data-num="<%= category[i].id %>" 
													value="<%= category[i].name %>">
												<%= category[i].name.length > 20 ? category[i].name.substring(0, 20).toUpperCase() + '...' : category[i].name.toUpperCase() %>
											</button>
										<% } %>
									</ul>
								</div>
								<div class="btn-group">
									<button type="button" 
											class="btn btn-primary dropdown-toggle" 
											data-bs-toggle="dropdown" 
											aria-expanded="false">
										<i class="fas fa-calendar me-1"></i>Date
									</button>
									<ul class="dropdown-menu dropdown-menu-end shadow-sm">
										<button class="dropdown-item btn btn-light w-100 mb-1" onclick="filterDate(0, 'month')">All</button>
										<button class="dropdown-item btn btn-light w-100 mb-1" onclick="filterDate(1, 'day')">Today</button>
										<button class="dropdown-item btn btn-light w-100 mb-1" onclick="filterDate(1, 'week')">This Week</button>
										<button class="dropdown-item btn btn-light w-100 mb-1" onclick="filterDate(1, 'month')">This Month</button>
										<button class="dropdown-item btn btn-light w-100 mb-1" onclick="filterDate(7, 'day')">Last 7 Days</button>
										<button class="dropdown-item btn btn-light w-100 mb-1" onclick="filterDate(30, 'day')">Last 30 Days</button>
										<button class="dropdown-item btn btn-light w-100 mb-1" onclick="filterDate(-1, 'month')">Last Month</button>
										<button class="dropdown-item btn btn-light w-100 mb-1" onclick="filterDate(3, 'month')">Last 3 Months</button>
									</ul>
								</div>
							</div>
						</div>
				
						
					</div>
				</div>
				<div class="card mb-2 w-auto" style="max-width: 350px;">
					<div class="card-body">
					  <p class="small mb-1" >Date: <span id="summaryDate"></span></p>
					  <p class="small mb-1" >Category: <span id="summaryCategory"></span></p>
					  <p class="small mb-1">Transactions: <span id="summaryTranTotal"></span></p>
					  <p class="small mb-1">Total Sum: <span id="summaryTotalSum"></span></p>
					</div>
				</div>
				<div class="table-responsive">
					<table class="table table-striped table-hover">
						<thead class="table-dark">
							<tr>
								<th style="min-width: 40px">#</th>
								<th style="min-width: 150px">Description</th>
								<th style="min-width: 120px">Amount</th>
								<th style="min-width: 180px">Date</th>
								<th style="min-width: 120px">Category</th>
								<th style="min-width: 120px">Created By</th>
								<% if (trans !== 'all') { %>
									<th style="min-width: 130px">Actions</th>
								<% } %>
							</tr>
						</thead>
						<tbody id="transactionTable">
							<% 
								let totalSum = 0; 
								if (transaction.length > 0) { 
									for (let i = 0; i < transaction.length; i++) { 
										totalSum += transaction[i].amount;
									} 
								} 
							%>
							<% if (transaction.length > 0) { %>
								<% for (let i = 0; i < transaction.length; i++) { %>
									<tr>
										<td class="text-nowrap <%= trans === 'all' && transaction[i].transactionType === 'income' ? 'text-success' : '' %>">
											<%= i + (parseInt(pagination.page) - 1)*10 + 1 %>
										</td>
										<td class="text-nowrap <%= trans === 'all' && transaction[i].transactionType === 'income' ? 'text-success' : '' %>" style="max-width: 200px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;">
											<%= transaction[i].description.length > 30 ? transaction[i].description.substring(0, 30) + '...' : transaction[i].description %>
										</td>
										<td class="text-nowrap <%= trans === 'all' && transaction[i].transactionType === 'income' ? 'text-success' : '' %>">
											<% let formattedAmount = transaction[i].amount.toLocaleString(); %>
											<% if (transaction[i].baseCurrency === 'MMK') { %>
												<%= formattedAmount %> ks
											<% } else if (transaction[i].baseCurrency === 'USD') { %>
												$ <%= formattedAmount %>
											<% } else { %>
												<%= formattedAmount %> <%= transaction[i].baseCurrency %>
											<% } %>
										</td>
										<td class="text-nowrap <%= trans === 'all' && transaction[i].transactionType === 'income' ? 'text-success' : '' %>">
											<%= new Date(
												trans === 'income' ? transaction[i].incomeDate :
												trans === 'expense' ? transaction[i].expenseDate :
												transaction[i].transactionDate
											).toLocaleString('en-US', { 
												day: '2-digit', 
												month: 'short', 
												year: 'numeric', 
												hour: '2-digit', 
												minute: '2-digit', 
												second: '2-digit', 
												hour12: true 
											}) %>
										</td>
										<td class="text-nowrap <%= trans === 'all' && transaction[i].transactionType === 'income' ? 'text-success' : '' %>">
											<%= transaction[i].category %>
										</td>
										<td class="text-nowrap <%= trans === 'all' && transaction[i].transactionType === 'income' ? 'text-success' : '' %>">
											<%= transaction[i].createdBy %>
										</td>
										<% if (trans !== 'all') { %>
											<td>
												<div class="d-flex flex-nowrap">
													<a href="/subscriber/transaction/<%= trans %>/detail/<%= transaction[i].id %>?trans=<%= trans %>&page=<%= pagination.page %>"
														class="btn btn-primary btn-sm btn-fixed-width me-1">View</a>
													<a href="/subscriber/transaction/<%= trans %>/update/<%= transaction[i].id %>?trans=<%= trans %>&page=<%= pagination.page %>"
														class="btn btn-warning btn-sm btn-fixed-width me-1">Edit</a>
												</div>
											</td>
										<% } %>
									</tr>
								<% } %>
							<% } else { %>
								<tr>
									<td colspan="<%= trans === 'all' ? 6 : 7 %>" class="text-center text-muted">No transactions found.</td>
								</tr>
							<% } %>
						</tbody>
					</table>
				</div>
				
				
            </div>
        </main>
		<div class="modal fade" id="addNewTransaction" tabindex="-1" aria-labelledby="addNewTransactionModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addNewTransactionModalLabel">Add New Category</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addNewTransactionForm" action="/subscriber/transaction/<%= trans %>/create" method="post" enctype="multipart/form-data" onsubmit="setCurrentDateTime(event)">
							<div class="mb-3">
								<label for="transDescription" class="form-label">Description</label>
								<input type="text" class="form-control inputRequired" maxlength="100" name="description" id="transDescription"
									placeholder="Enter description" oninput="checkInputs('transDescriptionError', 'transDescription')" required>
								<p id="transDescriptionError" class="mt-2 d-none text-danger">*Description can't exceed 100 characters!</p>
							</div>
						
							<div class="mb-3">
								<label for="transAmount" class="form-label">Amount</label>
								<input type="number" class="form-control inputRequired" maxlength="11" name="amount" id="transAmount"
									placeholder="Enter amount" oninput="checkInputs('transAmountError', 'transAmount')" required>
								<p id="transAmountError" class="mt-2 d-none text-danger">*Amount can't exceed 11 characters!</p>
							</div>
						
							<div class="mb-3">
								<label for="transCategory" class="form-label">Category</label>
								<select id="transCategory" name="catId" class="form-select inputRequired" required>
									<% category.forEach(option => { %>
										<option value="<%= option.id %>"><%= option.name %></option>
									<% }); %>
								</select>
							</div>
						
							<input type="hidden" name=<% if (trans === 'income' ) { %> incomeDate <% } else {%> expenseDate <% } %> id="transDate">
						
							<div class="mb-3">
								<label for="transReceipt" class="form-label">Receipt</label>
								<input type="file" class="form-control" name="receipt" id="transReceipt">
							</div>
						
							<button type="submit" id="addBtn" class="btn btn-primary w-100">Add Transaction</button>
						</form>
                    </div>
                </div>
            </div>
        </div>
		<% if (pagination && pagination.totalPages > 1) { %>
			<nav aria-label="Pagination" id="paginationNav">
				<ul class="pagination justify-content-center">
					<li class="page-item <%= pagination.page <= 1 ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page > 1 ? 'goToPage(1)' : '' %>><<</a>
					</li>
		   
					<li class="page-item <%= pagination.page <= 1 ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page > 1 ? 'goToPage(' + (pagination.page - 1) + ')' : '' %>><</a>
					</li>
		   
					<% if (pagination.page > 2) { %>
						<li class="page-item"><a class="page-link" onclick="goToPage(1)">1</a></li>
						<% if (pagination.page > 3) { %>
							<li class="page-item disabled"><a class="page-link">...</a></li>
						<% } %>
					<% } %>
					
					<% if (pagination.page > 1) { %>
						<% for (let i = Math.max(1, pagination.page - 1); i <= Math.min(parseInt(pagination.totalPages), parseInt(pagination.page) + 1); i++) { %>
							<li class="page-item <%= parseInt(i) === parseInt(pagination.page) ? 'active' : '' %>">
								<a class="page-link" onclick="goToPage('<%= i %>')"><%= i %></a>
							</li>
						<% } %>
					<% } else { %>
						<% for (let i = 1; i <= Math.min(2, pagination.totalPages); i++) { %>
							<li class="page-item <%= parseInt(i) === parseInt(pagination.page) ? 'active' : '' %>">
								<a class="page-link" onclick="goToPage('<%= i %>')"><%= i %></a>
							</li>
						<% } %>
					<% } %>
		   
					<% if (pagination.page < pagination.totalPages - 1) { %>
						<% if (pagination.page < pagination.totalPages - 2) { %>
							<li class="page-item disabled"><a class="page-link">...</a></li>
							<li class="page-item">
								<a class="page-link" onclick="goToPage('<%= pagination.totalPages %>')">
									<%= pagination.totalPages %>
								</a>
							</li>
						<% } else if (pagination.page < pagination.totalPages) { %>
							<li class="page-item">
								<a class="page-link" onclick="goToPage('<%= pagination.totalPages %>')">
									<%= pagination.totalPages %>
								</a>
							</li>
						<% } %>
					<% } %>
		   
					<li class="page-item <%= pagination.page >= pagination.totalPages ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page < pagination.totalPages ? 'goToPage(' + (parseInt(pagination.page) + 1) + ')' : '' %>>></a>
					</li>
		   
					<li class="page-item <%= pagination.page >= pagination.totalPages ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page < pagination.totalPages ? 'goToPage(' + pagination.totalPages + ')' : '' %>>>></a>
					</li>
				</ul>
			</nav>
		<% } %>
		
		<script>
			function filterCategories() {
		        let input = document.getElementById('categorySearch').value.toLowerCase();
		        let items = document.querySelectorAll('.category-item');

		        items.forEach(item => {
		            let text = item.getAttribute('value').toLowerCase();
		            item.style.display = text.includes(input) ? 'block' : 'none';
		        });
		    }

		    function setCurrentDateTime(event) {
		        event.preventDefault();

		        const now = new Date();
			    const year = now.getFullYear();
			    const month = String(now.getMonth() + 1).padStart(2, '0');
			    const day = String(now.getDate()).padStart(2, '0');
			    const hours = String(now.getHours()).padStart(2, '0');
			    const minutes = String(now.getMinutes()).padStart(2, '0');
			    const formattedDate = `${year}-${month}-${day}T${hours}:${minutes}`;
		        document.getElementById('transDate').value = formattedDate;

		        event.target.submit();
		    }
			function goToPage(pageNumber) {
			    const baseUrl = new URL(window.location.href);
			    baseUrl.searchParams.set("page", pageNumber);
			    window.location.href = baseUrl.toString();
			}


			function handleClick(buttonType, event) {
			    event.preventDefault();

			    const btnIncome = document.getElementById('btnIncome');
			    const btnExpense = document.getElementById('btnExpense');
			    if (buttonType === 'income') {
			        if (btnIncome.classList.contains('btn-dark')) {
			            window.location.href = '/subscriber/transaction/transactions';
			        } else {
			            btnIncome.classList.remove('btn-secondary');
			            btnIncome.classList.add('btn-dark');
			            btnExpense.classList.remove('btn-dark');
			            btnExpense.classList.add('btn-secondary');
			            window.location.href = '/subscriber/transaction/income';
			        }
			    } else if (buttonType === 'expense') {
			        if (btnExpense.classList.contains('btn-dark')) {
			            window.location.href = '/subscriber/transaction/transactions';
			        } else {
			            btnExpense.classList.remove('btn-secondary');
			            btnExpense.classList.add('btn-dark');
			            btnIncome.classList.remove('btn-dark');
			            btnIncome.classList.add('btn-secondary');
			            window.location.href = '/subscriber/transaction/expense';
			        }
			    }
			}

			const form = document.getElementById('addNewTransactionForm');
            const addButton = document.getElementById('addBtn');
            const inputs = form.querySelectorAll('.inputRequired');
            function checkInputs(messageBox, inputField) {
                let allFilled = true;
                inputs.forEach(index => {
                if (!index.value.trim()) {
                    allFilled = false;
                }
                });
                addButton.disabled = !allFilled;
				const message = document.getElementById(messageBox)
				const input = document.getElementById(inputField)
				if (input.value.length === parseInt(input.maxLength)) {
			        message.classList.remove('d-none');
			    } else {
			        message.classList.add('d-none');
			    }
            }


            function submitForm(event) {
			    addButton.disabled = true;
			    addButton.textContent = 'Submitting...';
			}

			function toggleDropdown(dropdown_menu) {
			    let dropdown = document.getElementById(dropdown_menu);
			    let isVisible = dropdown.style.display === "block";

			    document.querySelectorAll(".dropdown-content").forEach(menu => {
			        menu.style.display = "none";
			    });

			    if (!isVisible) {
			        dropdown.style.display = "block";
			    }
			}
	
			function searchKey(event){
				if (event.key === 'Enter') {
					performSearch();
				}
			}
			
			window.onclick = function (event) {
				if (!event.target.matches('.dropdown-btn')) {
					let dropdowns = document.getElementsByClassName("dropdown-content");
					for (let i = 0; i < dropdowns.length; i++) {
						let openDropdown = dropdowns[i];
						if (openDropdown.style.display === "block") {
							openDropdown.style.display = "none";
						}
					}
				}
			};
			function performSearch() {
			    let input = document.getElementById("searchInput").value.trim();
			    let url = new URL(window.location.href);
			    
			    if (input) {
			        url.searchParams.set("search", input);
					url.searchParams.delete("page");
			    } else {
			        url.searchParams.delete("search");
					url.searchParams.delete("page");
			    }
			    window.location.href = url.toString();
			}

			function filterCategory(category_name) {
			    let url = new URL(window.location.href);
			    if (category_name && category_name !== 'all') {
			        url.searchParams.set("catId", category_name);
					url.searchParams.delete("page");
			    } else {
			        url.searchParams.delete("catId");
					url.searchParams.delete("page");
			    }
			    window.location.href = url.toString();
			}

			function filterDate(num, type) {
			    let url = new URL(window.location.href);
			    if (num && type && num !== 0) {
			        url.searchParams.set("num", num);
					url.searchParams.set("type", type);
					url.searchParams.delete("page");
			    } else {
			        url.searchParams.delete("num");
					url.searchParams.delete("type");
					url.searchParams.delete("page");
			    }
			    window.location.href = url.toString();
			}

			const searchParams = new URLSearchParams(window.location.search);
			const type = searchParams.get('type')
			const num = searchParams.get('num')
			const catId = searchParams.get('catId')
			let categoryBtns = document.querySelectorAll('#categoryBtns')
			
			const totalTrans = "<%= transaction.length %>"
			if (totalTrans) {
				document.getElementById('summaryTranTotal').innerText = totalTrans
			} else {
				document.getElementById('summaryTranTotal').innerText = "0"
			}

			const totalSum = "<%= totalSum %>";
			if (parseInt(totalTrans) > 0 && totalSum) {
				const currency = "<%= transaction.length > 0 ? transaction[0].baseCurrency : '' %>";
				let formattedTotal = new Intl.NumberFormat('en-US').format(totalSum);

			    if (currency === "MMK") {
			        document.getElementById('summaryTotalSum').innerText = `${formattedTotal} ks`;
			    } else if (currency === "USD") {
			        document.getElementById('summaryTotalSum').innerText = `$ ${formattedTotal}`;
			    } else {
			        document.getElementById('summaryTotalSum').innerText = `${currency} ${formattedTotal}`;
			    }
			} else {
			    document.getElementById('summaryTotalSum').innerText = "0";
			}

			if (catId) {
				categoryBtns.forEach(categoryBtn => {
					let categoryBtnId = categoryBtn.dataset.num
					if (catId === categoryBtnId) {
						const categoryName = categoryBtn.value.toUpperCase()
						document.getElementById('summaryCategory').innerText = categoryName
					}
				})
			} else if (!catId) {
				document.getElementById('summaryCategory').innerText = "ALL"
			}
			
			if (type === 'month') {
				if (num === '0') {
					document.getElementById('summaryDate').innerText = "ALL"
				} else if (num === '1') {
					document.getElementById('summaryDate').innerText = "This Month"
				} else if (num === '3') {
					document.getElementById('summaryDate').innerText = "Last 3 Months"
				}
			} else if (type === 'week') {
				document.getElementById('summaryDate').innerText = "This Week"
			} else if (type === 'day') {
				if (num === '1') {
					document.getElementById('summaryDate').innerText = "Today"
				} else if (num === '7') {
					document.getElementById('summaryDate').innerText = "Last 7 Days"
				} else if (num === '30') {
					document.getElementById('summaryDate').innerText = "Last 30 Days"
				}
			} else {
				document.getElementById('summaryDate').innerText = "ALL"
			}

		</script>
        <%- include('../partials/subscriber/footer.ejs') %>