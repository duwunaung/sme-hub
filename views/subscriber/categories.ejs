<%- include('../partials/subscriber/header.ejs') %>
    <%- include('../partials/subscriber/navbar.ejs') %>

		<style>
			.btn-fixed-width {
		        width: 80px;
		        min-width: 60px;
		        text-align: center;
		    }
			.page-item a:hover {
		    	cursor: pointer;
			}
			@media (max-width: 768px) {
				.table th, .table td {
					padding: 0.5rem;
					font-size: 0.875rem;
				}
				
				.btn-sm {
					padding: 0.25rem 0.5rem;
					font-size: 0.75rem;
				}
				
				#btnIncome, #btnExpense, #addNewCatBtn {
					height: 60px !important;
					width: 180px !important;
					font-size: 0.9rem;
				}
				#expenseIcon {
					top: 33px !important;
					left: 20px !important;
				}
				#incomeIcon {
					top: 30px !important;
					left: 20px !important;
				}
				#btnGroupCard {
					width: 460px !important;
					height: 200px !important;
				}
				#menuNameFirst, #dayDay, #monthMonth {
					font-size: 16px !important;
				}
				#menuNameSec {
					font-size: 14px !important;
				}
				#dateDay {
					height: 40px !important;
					width: 40px !important;
					font-size: 14px;
				}
				#menuName{
					margin-left: 31px !important;
				}
				#dateSection{
					margin-right: 31px !important;
				}
				#addBtnNewCatGrp {
					top: 220px !important;
				}
				#headCard{
					margin-bottom: 100px !important;
				}
			}
			@media (max-width: 576px) {
				#btnIncome, #btnExpense, #addNewCatBtn {
					height: 50px !important;
					width: 130px !important;
					font-size: 0.85rem;
				}
				#expenseIcon {
					top: 30px !important;
					left: 15px !important;
				}
				#incomeIcon {
					top: 27px !important;
					left: 15px !important;
				}
				#btnGroupCard {
					width: 320px !important;
					height: 150px !important;
				}
				#menuNameFirst, #dayDay, #monthMonth {
					font-size: 14px !important;
				}
				#menuNameSec {
					font-size: 12px !important;
				}
				#dateDay {
					height: 32px !important;
					width: 32px !important;
					font-size: 13px;
				}
				#menuName {
					margin-left: 15px !important;
				}
				#dateSection {
					margin-right: 12px !important;
				}
				#addBtnNewCatGrp {
					top: 170px !important;
				}
				#headCard{
					margin-bottom: 90px !important;
				}
			}
			#btnIncome, #btnExpense , #addNewCatBtn {
			    height: 70px;
			    width: 250px;
			    top: 139px;
			    left: 55px;
			    border-radius: 16px;
			    border-width: 3px;
			    display: flex;
			    align-items: center;
			    justify-content: center;
				transition: all 0.3s;
				box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
			}
			.incomeBtnColor {
				background-color: #00C382;
			}
			.expenseBtnColor {
				background-color:#D62828;
			}
			.incomeBtnColor:hover {
			    background-color: #00A872 !important;
			    color: white !important;
			}

			.expenseBtnColor:hover {
			    background-color: #C42323 !important;
			    color: white !important;
			}
			#expenseIcon {
				height: 25px; width: 25px; position: absolute; top: 40px; left: 45px; transform: translateY(-50%);
			}
			#incomeIcon {
				height: 25px; width: 25px; position: absolute; top: 38px; left: 45px; transform: translateY(-50%);
			}
			#btnGroupCard {
				width: 600px;
				height: 220px;
				top: 155px;
				left: 374px;
				border-radius: 20px;
				border-width: 1px;
				box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
				display: flex; 
				flex-direction: column;
				justify-content: center;
			}
			#headOfCard {
			    display: flex;
			    justify-content: space-between;
			    align-items: center;
			    width: 100%;
				margin-bottom: 20px;
			}

			#menuName {
			    display: flex;
			    flex-direction: column;
				margin-left: 30px;
			}

			#dateSection {
			    display: flex;
			    align-items: center;
				margin-right: 30px;
			}

			#dateDay {
			    width: 50px;
			    height: 50px;
			    background-color: #4D4D4D;
			    color: white;
			    display: flex;
			    justify-content: center;
			    align-items: center;
			    border-radius: 50%;
			    font-weight: bold;
			    margin-right: 10px;
			}

			#dayMonth {
			    display: flex;
			    flex-direction: column;
			}
			#menuNameFirst {
				color: #05004E; 
				font-weight: 600; 
				font-size: 20px; 
				line-height: 32px; 
				letter-spacing: 0px;
			}
			#menuNameSec {
				font-weight: 400;
				font-size: 16px;
				line-height: 30px;
				letter-spacing: 0px;
			}
			#addBtnNewCatGrp {
				position: absolute;
				top: 250px;
				
			}
			#headCard{
				position: relative;
				margin-bottom: 120px;
			}
			.btnAddNewRight {
				right: 51%;
			}
			.btnAddNewLeft {
				left: 51%;
			}
		</style>
		<div id="mainContainer" style="margin-top: 100px;"></div>
		<!-- Main Content -->
        <main >
			
            <div class="content">
				<% if (errorMessage) { %>
					<div id="errorBox" class="alert alert-danger" role="alert">
						<%= errorMessage %>
					</div>
					<% } %>
					<% if (successMessage) { %>
					<div id="successBox" class="alert alert-success" role="alert">
						<%= successMessage %>
					</div>
					<% } %>
				<div id="headCard">
					<div class="container my-2" id="btnGroupCard">
						<div id="headOfCard" class="d-flex">
							<div id="menuName">
								<div id="menuNameFirst">Categories</div>
								<div id="menuNameSec" class="text-secondary"><% if (cat === 'income' ) { %> Income <% } else {%> Expense <% } %> Categories</div>
							</div>
							<div id="dateSection">
								<div id="dateDay"></div>
								<div id="dayMonth">
									<div id="dayDay"></div>
									<div id="monthMonth"></div>
								</div>
							</div>
						</div>					
						<div id="btnGroup">
							<div class="d-flex justify-content-center  gap-3">
								<div class="d-flex  gap-2">
									<div style="position: relative;">
										<img src="/income_icon.svg" id="incomeIcon" style="cursor: pointer;" onclick="document.getElementById('btnIncome').click();">
										<a type="button" href="/subscriber/category/income" 
										   class="text-decoration-none btn <% if (cat === 'income') { %> incomeBtnColor <% } else { %> btn-secondary <% } %> flex-grow-1 ps-4" 
										   id="btnIncome">
										  <div class="btn-content">
											<span class="text-light">INCOME</span>
										  </div>
										</a>
									</div>
								</div>
						
								<div class="d-flex align-items-center gap-2">
									<div style="position: relative;">
										<img src="/expense_icon.svg" id="expenseIcon" style="cursor: pointer;" onclick="document.getElementById('btnExpense').click();">
										<a type="button" href="/subscriber/category/expense" 
										   class="text-decoration-none btn <% if (cat === 'expense') { %> expenseBtnColor <% } else { %> btn-secondary <% } %> flex-grow-1 ps-4" 
										   id="btnExpense">
										  <div class="btn-content">
											<span class="text-light">EXPENSE</span>
										  </div>
										</a>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex justify-content-between align-items-center mb-4 <%= cat === 'income' ? 'btnAddNewRight'  : 'btnAddNewLeft' %>" id="addBtnNewCatGrp" >
						<button class="btn <%= cat === 'income' ? 'incomeBtnColor'  : 'expenseBtnColor' %> text-light" data-bs-toggle="modal" id="addNewCatBtn"
						data-bs-target="#addNewCategory">
							Add Category
						</button>
					</div>
				</div>
				
				<!-- Search Bar -->
				<div class="container-div my-2" >
					<div class="row justify-content-end">
				
						<!-- Search Bar -->
						<div class="col-auto mb-2">
							<div class="input-group" style="width: 280px;">
								<input type="text" 
									   class="form-control" 
									   placeholder="Search..." 
									   id="searchInput" 
									   onkeydown="searchKey(event)">
								<button class="btn btn-primary" onclick="performSearch()">
									<i class="fas fa-search"></i>
								</button>
							</div>
						</div>	
					</div>
				</div>
				
				<!-- Category Table -->
				<div class="table-responsive d-flex justify-content-center" >
					
					<table class="table table-striped table-hover">
						
						<thead class="table-dark">
						  <tr >
							<th style="width: 60px; cursor: pointer;" onclick="sortTable(0, 'number', this)">ID <span></span></th>
							<th style="width: 180px; cursor: pointer;" onclick="sortTable(1, 'string', this)">Name <span></span></th>
							<th style="width: 100px; cursor: pointer;" onclick="sortTable(5, 'string', this)">Created By <span></span></th>
							<th style="width: 100px;">Actions</th>
						</tr>
						</thead>
						<tbody>
							<tbody id="categoryTable">
								<% if (category.length > 0) { %>
									<% for (let i = 0; i < category.length; i++) { %>
										<tr>
											<td class="text-nowrap"><%= i + ((parseInt(pagination.page) - 1) * (parseInt(pagination.pageSize))) + 1 %></td>
											<td class="text-nowrap"><%= category[i].name.length > 30 ? category[i].name.substring(0, 30) + '...' : category[i].name %></td>
											<td class="text-nowrap"><%= category[i].createdBy %></td>
											<td>
												<div class="d-flex flex-nowrap">
													<a href="/subscriber/category/<%= cat %>/detail/<%= category[i].id %>"
														class="btn btn-primary btn-sm btn-fixed-width me-1">View</a>
													<a href="/subscriber/category/<%= cat %>/update/<%= category[i].id %>?cat=<%= cat %>&page=<%= pagination.page %>"
														class="btn btn-warning btn-sm btn-fixed-width me-1">Edit</a>
													
													<% if (category[i].status === 'deleted') { %>
														<a href="/subscriber/category/<%= cat %>/restore/<%= category[i].id %>"
															class="btn btn-danger btn-sm btn-fixed-width">Restore</a>
													<% } else if (category[i].status === 'active') { %>
														<a href="#" class="btn btn-danger btn-sm btn-fixed-width" 
														   data-bs-toggle="modal" 
														   data-bs-target="#confirmationModal" 
														   data-category-id="<%= category[i].id %>" 
														   data-category-cat="<%= cat %>"
														   onclick="setDeleteCategory(this)">Delete</a>
													<% } %>
												</div>
											</td>
										</tr>
									<% } %>
								<% } else { %>
									<tr>
										<td colspan="4" class="text-center text-muted">No categories found.</td>
									</tr>
								<% } %>
							</tbody>
						</tbody>
					</table>
				</div>
				  
            </div>
        </main>
		<!-- Modal for duplicate name -->
		<div class="modal fade" id="duplicateNameModal" tabindex="-1" aria-labelledby="duplicateNameLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="duplicateNameLabel">Duplicate Category Name</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<p></p>
					</div>
					<div class="modal-footer">
						<button></button>
					</div>
				</div>
			</div>
		</div>
		<!-- Modal for confirmation box -->
		<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<p>You are <strong>deleting</strong> a category. Do you want to proceed?</p>
					

					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
						<button type="button" class="btn btn-primary" id="confirmBtn" onclick="deleteConfirm()">Confirm</button>
					</div>
				</div>
			</div>
		</div>
		<!-- Modal for Adding New Category -->
		<div class="modal fade" id="addNewCategory" tabindex="-1" aria-labelledby="addNewCategoryModalLabel" aria-hidden="true">
		    <div class="modal-dialog">
		        <div class="modal-content">
		            <div class="modal-header">
		                <h5 class="modal-title" id="addNewCategoryModalLabel">Add New Category</h5>
		                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
		            </div>
		            <div class="modal-body">
		                <form id="addNewCategoryForm" action="/subscriber/category/<%= cat %>/create" method="POST" onsubmit="submitForm(event)">
		                    
		                    <!-- Category Name -->
		                    <div class="mb-3">
		                        <label for="catName" class="form-label">Category Name</label>
		                        <input type="text" class="form-control" maxlength="100" name="name" id="catName"
		                            placeholder="Enter category name" value="" oninput="checkInputs('catNameError', 'catName')" required>
		                        <p id="catNameError" class="mt-2 d-none text-danger">*Category Name can't exceed 100 characters!</p>
		                    </div>

		                    <!-- Category Type Selection -->
		                    <div class="mb-3">
		                        <label class="form-label">Category Type</label>
		                        <div class="form-check">
		                            <input class="form-check-input" type="radio" name="categoryType" id="standalone" value="standalone" checked onclick="toggleParentCategory()">
		                            <label class="form-check-label" for="standalone">Standalone Category</label>
		                        </div>
		                        <div class="form-check">
		                            <input class="form-check-input" type="radio" name="categoryType" id="underParent" value="underParent" onclick="toggleParentCategory()">
		                            <label class="form-check-label" for="underParent">Under Parent <%= cat === 'income' ? 'Sale' : 'Purchase' %></label>
		                        </div>
		                    </div>

		                    <!-- Parent Category Dropdown (Hidden by Default) -->
		                    <div class="mb-3" id="parentCategoryGroup" style="display: none;">
		                        <label for="parentCategory" class="form-label">
									Select Parent <%= cat === 'income' ? 'Sale' : 'Purchase' %>
								</label>								
		                        <select class="form-select" id="parentCategory" name="parentCategory">
		                            <option value="">Choose...</option>
		                            <option value="<%= cat === 'income' ? 'sale' : 'purchase' %>" selected><%= cat === 'income' ? 'Sale' : 'Purchase' %></option>
		                        </select>
		                    </div>

		                    <button type="submit" id="addBtn" class="btn btn-primary w-100" disabled>Add Category</button>
		                </form>
		            </div>
		        </div>
		    </div>
		</div>
		<!-- PageSize -->
		<div class="btn-group my-2" style="max-width: 100px;">
			<button type="button" 
					class="btn btn-outline-dark dropdown-toggle" 
					data-bs-toggle="dropdown" 
					aria-expanded="false">
				Page Size
			</button>
			<ul class="dropdown-menu dropdown-menu-end shadow-sm" id="dropdown-menu-pageSize" style="max-height: 280px; overflow-y: auto;">
				
				<button class="dropdown-item btn btn-light w-100 mb-1" onclick="setPageSize(5)">
					5
				</button>
				<button class="dropdown-item btn btn-light w-100 mb-1" onclick="setPageSize(10)">
					10
				</button>
				<button class="dropdown-item btn btn-light w-100 mb-1" onclick="setPageSize(15)">
					15
				</button>
				<button class="dropdown-item btn btn-light w-100 mb-1" onclick="setPageSize(20)">
					20
				</button>
				<button class="dropdown-item btn btn-light w-100 mb-1" onclick="setPageSize(30)">
					30
				</button>
			</ul>
		</div>
		<!-- Pagination -->
		<% if (pagination && pagination.totalPages > 1) { %>
			<nav aria-label="Pagination" id="paginationNav">
				<ul class="pagination justify-content-center">
					<li class="page-item <%= pagination.page <= 1 ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page > 1 ? 'goToPage(1)' : '' %>><<</a>
					</li>
		   
					<li class="page-item <%= pagination.page <= 1 ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page > 1 ? 'goToPage(' + (pagination.page - 1) + ')' : '' %>><</a>
					</li>
		   
					<% if (pagination.page > 2) { %>
						<li class="page-item"><a class="page-link" onclick="goToPage(1)">1</a></li>
						<% if (pagination.page > 3) { %>
							<li class="page-item disabled"><a class="page-link">...</a></li>
						<% } %>
					<% } %>
					
					<% if (pagination.page > 1) { %>
						<% for (let i = Math.max(1, pagination.page - 1); i <= Math.min(parseInt(pagination.totalPages), parseInt(pagination.page) + 1); i++) { %>
							<li class="page-item <%= parseInt(i) === parseInt(pagination.page) ? 'active' : '' %>">
								<a class="page-link" onclick="goToPage('<%= i %>')"><%= i %></a>
							</li>
						<% } %>
					<% } else { %>
						<% for (let i = 1; i <= Math.min(2, pagination.totalPages); i++) { %>
							<li class="page-item <%= parseInt(i) === parseInt(pagination.page) ? 'active' : '' %>">
								<a class="page-link" onclick="goToPage('<%= i %>')"><%= i %></a>
							</li>
						<% } %>
					<% } %>
		   
					<% if (pagination.page < pagination.totalPages - 1) { %>
						<% if (pagination.page < pagination.totalPages - 2) { %>
							<li class="page-item disabled"><a class="page-link">...</a></li>
							<li class="page-item">
								<a class="page-link" onclick="goToPage('<%= pagination.totalPages %>')">
									<%= pagination.totalPages %>
								</a>
							</li>
						<% } else if (pagination.page < pagination.totalPages) { %>
							<li class="page-item">
								<a class="page-link" onclick="goToPage('<%= pagination.totalPages %>')">
									<%= pagination.totalPages %>
								</a>
							</li>
						<% } %>
					<% } %>
		   
					<li class="page-item <%= pagination.page >= pagination.totalPages ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page < pagination.totalPages ? 'goToPage(' + (parseInt(pagination.page) + 1) + ')' : '' %>>></a>
					</li>
		   
					<li class="page-item <%= pagination.page >= pagination.totalPages ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page < pagination.totalPages ? 'goToPage(' + pagination.totalPages + ')' : '' %>>>></a>
					</li>
				</ul>
			</nav>
		<% } %>
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
		<script>

			let sortDirections = {};

			function sortTable(columnIndex, type, headerElement) {
				let table = document.getElementById("categoryTable");
				let rows = Array.from(table.getElementsByTagName("tr"));
				let ascending = !sortDirections[columnIndex];
				sortDirections[columnIndex] = ascending;

				rows.sort((rowA, rowB) => {
					let cellA = rowA.getElementsByTagName("td")[columnIndex]?.innerText.trim() || "";
					let cellB = rowB.getElementsByTagName("td")[columnIndex]?.innerText.trim() || "";

					if (type === "number") {
						cellA = parseFloat(cellA.replace(/[^0-9.-]/g, "")) || 0;
						cellB = parseFloat(cellB.replace(/[^0-9.-]/g, "")) || 0;
						return ascending ? cellA - cellB : cellB - cellA;
					} else if (type === "date") {
						cellA = new Date(cellA).getTime() || 0;
						cellB = new Date(cellB).getTime() || 0;
						return ascending ? cellA - cellB : cellB - cellA;
					} else {
						return ascending ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);
					}
				});
				rows.forEach(row => table.appendChild(row));
				document.querySelectorAll("th span").forEach(span => span.innerHTML = "");
				headerElement.querySelector("span").innerHTML = ascending ? " ▲" : " ▼";
			}

			let deleteCategoryId = null;
		    let deleteCategoryCat = null;

		    function setDeleteCategory(element) {
		        deleteCategoryId = element.getAttribute("data-category-id");
		        deleteCategoryCat = element.getAttribute("data-category-cat");
		    }

		    function deleteConfirm() {
		        if (deleteCategoryId && deleteCategoryCat) {
		            window.location.href = `/subscriber/category/${deleteCategoryCat}/delete/${deleteCategoryId}`;
		        }
		    }
			
			function goToPage(pageNumber) {
			    const baseUrl = new URL(window.location.href);
			    baseUrl.searchParams.set("page", pageNumber);
			    window.location.href = baseUrl.toString();
			}

			function setPageSize(pagesize) {
				let url = new URL(window.location.href);
			    if (pagesize && pagesize !== 10) {
			        url.searchParams.set("pageSize", pagesize);
					url.searchParams.delete("page");
			    } else {
			        url.searchParams.delete("pageSize");
					url.searchParams.delete("page");
			    }
			    window.location.href = url.toString();
			}

			function searchKey(event){
				if (event.key === 'Enter') {
					performSearch();
				}
			}

			function performSearch() {
			    let input = document.getElementById("searchInput").value.trim();
			    let url = new URL(window.location.href);
			    
			    if (input) {
			        url.searchParams.set("search", input);
					url.searchParams.delete("page");
			    } else {
			        url.searchParams.delete("search");
					url.searchParams.delete("page");
			    }
			    window.location.href = url.toString();
			}
			
			const form = document.getElementById('addNewCategoryForm');
            const addButton = document.getElementById('addBtn');
            const inputs = form.querySelectorAll('.form-control[required]');

            function checkInputs(messageBox, inputField) {
                let allFilled = true;
                inputs.forEach(index => {
                if (!index.value.trim()) {
                    allFilled = false;
                }
                });
                addButton.disabled = !allFilled;
				const message = document.getElementById(messageBox)
				const input = document.getElementById(inputField)
				if (input.value.length === parseInt(input.maxLength)) {
			        message.classList.remove('d-none');
			    } else {
			        message.classList.add('d-none');
			    }
            }


            function submitForm(event) {
			    addButton.disabled = true;
			    addButton.textContent = 'Submitting...';
			}

			function toggleParentCategory() {
		        document.getElementById('parentCategoryGroup').style.display = 
		            document.getElementById('underParent').checked ? 'block' : 'none';
		    }
			
			function goToDirection(id, type) {
			    const pathname = window.location.pathname;
			    let newUrl;

			    if (type === 'view') {
			        newUrl = `${pathname}/detail/${id}`;
			    } else if (type === 'edit') {
			        newUrl = `${pathname}/update/${id}`;
			    } else if (type === 'restore') {
			        newUrl = `${pathname}/restore/${id}`;
			    }
			    if (newUrl) {
			        window.location.href = newUrl;
			    } else {
			        console.error('Invalid type provided');
			    }
			}

			const params = new URLSearchParams(window.location.search);
			if (params.get("type") === "duplicate-name") {
			    const id = params.get("id");
			    const name = params.get("name");
			    const status = params.get("status");
			    if (id && name && status) {
			        const modalElement = document.getElementById('duplicateNameModal');
			        if (modalElement) {
			            const modalBody = modalElement.querySelector('.modal-body p');
			            const modalFooter = modalElement.querySelector('.modal-footer');
			            modalFooter.innerHTML = '';

			            if (status === 'active') {
			                modalBody.innerHTML = `The category name <strong>${name}</strong> already exists.`;
			                modalFooter.innerHTML = `
			                    <button type="button" class="btn btn-primary" onclick="goToDirection(${id}, 'view')">View</button>
			                    <button type="button" class="btn btn-warning" onclick="goToDirection(${id}, 'edit')">Edit</button>
			                `;
			            } else if (status === 'deleted') {
			                modalBody.innerHTML = `The category name <strong>${name}</strong> already exists. Do you want to restore?`;
			                modalFooter.innerHTML = `
			                    <button type="button" class="btn btn-danger" onclick="goToDirection(${id}, 'restore')">Restore</button>
			                `;
			            }
			            new bootstrap.Modal(modalElement).show();
			        } else {
			            console.error("Modal element not found.");
			        }
			    }
			}
			const today = new Date();
			const day = today.getDate();
			const weekday = today.toLocaleDateString("en-US", { weekday: "long" });
			const month = today.toLocaleDateString("en-US", { month: "long" });

			document.getElementById("dateDay").textContent = day;
			document.getElementById("dayDay").textContent = weekday + ",";
			document.getElementById("monthMonth").textContent = month;
						
		</script>
        <%- include('../partials/subscriber/footer.ejs') %>