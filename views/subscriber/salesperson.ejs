<%- include('../partials/subscriber/header.ejs') %>
    <%- include('../partials/subscriber/navbar.ejs') %>

		<style>
			.btn-fixed-width {
		        width: 80px;
		        min-width: 60px;
		        text-align: center;
		    }
			.page-item a:hover {
		    	cursor: pointer;
			}
		</style>
		<!-- Main Content -->
        <main >
			
            <div class="content mt-3">
				<% if (errorMessage) { %>
					<div id="errorBox" class="alert alert-danger" role="alert">
						<%= errorMessage %>
					</div>
					<% } %>
					<% if (successMessage) { %>
					<div id="successBox" class="alert alert-success" role="alert">
						<%= successMessage %>
					</div>
					<% } %>
				<div class="d-flex justify-content-between align-items-center mb-4">
					<h2>Salespersons</h2>
					<button class="btn btn-primary" data-bs-toggle="modal"
					data-bs-target="#addNewsalesperson">
						Add New
					</button>
				</div>
				<!-- Search Bar -->
				<div class="container-div my-2">
					<div class="row justify-content-end">
				
						<!-- Search Bar -->
						<div class="col-auto mb-2">
							<div class="d-flex justify-content-end">
								<input type="text" 
									   class="form-control me-2" 
									   placeholder="Search..." 
									   id="searchInput" 
									   onkeydown="searchKey(event)"
									   style="width: 250px;">
								<button class="btn btn-primary d-flex align-items-center px-3" onclick="performSearch()">
									<i class="fas fa-search"></i>
								</button>
							</div>
						</div>
				
					</div>
				</div>
				
				<!-- salesperson Table -->
				<div class="table-responsive">
					<table class="table table-striped table-hover">
						<thead class="table-dark">
						  <tr>
							<th style="min-width: 60px; cursor: pointer;" onclick="sortTable(0, 'number', this)">ID <span></span></th>
							<th style="min-width: 150px; cursor: pointer;" onclick="sortTable(1, 'string', this)">Name <span></span></th>
							<th style="min-width: 130px">Actions</th>
						</tr>
						</thead>
						<tbody>
							<tbody id="salespersonTable">
								<% if (salesperson.length > 0) { %>
									<% for (let i = 0; i < salesperson.length; i++) { %>
										<tr>
											<td class="text-nowrap"><%= i + ((parseInt(pagination.page) - 1) * (parseInt(pagination.pageSize))) + 1 %></td>
											<td class="text-nowrap"><%= salesperson[i].name.length > 30 ? salesperson[i].name.substring(0, 30) + '...' : salesperson[i].name %></td>
											<td>
												<div class="d-flex flex-nowrap">
													<button onclick="openUpdateModal('<%= salesperson[i].id %>', '<%= salesperson[i].name %>')"
														class="btn btn-warning btn-sm btn-fixed-width me-1">
														Edit
													</button>
													
													<% if (salesperson[i].status === 'deleted') { %>
														<a href="/subscriber/salesperson/restore/<%= salesperson[i].id %>"
															class="btn btn-danger btn-sm btn-fixed-width">Restore</a>
													<% } else if (salesperson[i].status === 'active') { %>
														<a href="#" class="btn btn-danger btn-sm btn-fixed-width" 
														   data-bs-toggle="modal" 
														   data-bs-target="#confirmationModal" 
														   data-salesperson-id="<%= salesperson[i].id %>"
														   onclick="setDeleteSalesperson(this)">Delete</a>
													<% } %>
												</div>
											</td>
										</tr>
									<% } %>
								<% } else { %>
									<tr>
										<td colspan="4" class="text-center text-muted">No salespersons found.</td>
									</tr>
								<% } %>
							</tbody>
						</tbody>
					</table>
				</div>
				  
            </div>
        </main>
		<!-- Modal for duplicate name -->
		<div class="modal fade" id="duplicateNameModal" tabindex="-1" aria-labelledby="duplicateNameLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="duplicateNameLabel">duplicate Salesperson Name</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<p></p>
					</div>
					<div class="modal-footer">
						<button></button>
					</div>
				</div>
			</div>
		</div>
		<!-- Modal for confirmation box -->
		<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<p>You are <strong>deleting</strong> a salesperson record. Do you want to proceed?</p>
					

					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
						<button type="button" class="btn btn-primary" id="confirmBtn" onclick="deleteConfirm()">Confirm</button>
					</div>
				</div>
			</div>
		</div>
		<!-- Modal for Adding New salesperson -->
		<div class="modal fade" id="addNewsalesperson" tabindex="-1" aria-labelledby="addNewsalespersonModalLabel" aria-hidden="true">
		    <div class="modal-dialog">
		        <div class="modal-content">
		            <div class="modal-header">
		                <h5 class="modal-title" id="addNewsalespersonModalLabel">Add New salesperson</h5>
		                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
		            </div>
		            <div class="modal-body">
		                <form id="addNewsalespersonForm" action="/subscriber/salesperson/create" method="POST" onsubmit="submitForm(event)">
		                    
		                    <!-- salesperson Name -->
		                    <div class="mb-3">
		                        <label for="salespersonName" class="form-label">Salesperson Name</label>
		                        <input type="text" class="form-control" maxlength="100" name="name" id="salespersonName"
		                            placeholder="Enter salesperson name" value="" oninput="checkInputs('salespersonNameError', 'salespersonName')" required>
		                        <p id="salespersonNameError" class="mt-2 d-none text-danger">*Salesperson Name can't exceed 100 characters!</p>
		                    </div>

		                    <button type="submit" id="addBtn" class="btn btn-primary w-100" disabled>Add Salesperson</button>
		                </form>
		            </div>
		        </div>
		    </div>
		</div>
		<!-- Modal for Updating Salesperson -->
		<div class="modal fade" id="updateSalesperson" tabindex="-1" aria-labelledby="updateSalespersonModalLabel" aria-hidden="true">
		    <div class="modal-dialog">
		        <div class="modal-content">
		            <div class="modal-header">
		                <h5 class="modal-title" id="updateSalespersonModalLabel">Update Salesperson</h5>
		                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
		            </div>
		            <div class="modal-body">
		                <form id="updateSalespersonForm" onsubmit="submitUpdateForm(event)" method="POST">
		                    <input type="hidden" id="salespersonId" name="id">
		                    
		                    <!-- Salesperson Name -->
		                    <div class="mb-3">
		                        <label for="updateSalespersonName" class="form-label">Salesperson Name</label>
		                        <input type="text" 
		                               class="form-control" 
		                               maxlength="100" 
		                               name="name" 
		                               id="updateSalespersonName"
		                               placeholder="Enter salesperson name" 
		                               oninput="checkUpdateInputs('updateSalespersonNameError', 'updateSalespersonName')" 
		                               required>
		                        <p id="updateSalespersonNameError" class="mt-2 d-none text-danger">*Salesperson Name can't exceed 100 characters!</p>
		                    </div>

		                    <button type="submit" id="updateBtn" class="btn btn-primary w-100">Update Salesperson</button>
		                </form>
		            </div>
		        </div>
		    </div>
		</div>
		<!-- PageSize -->
		<div class="btn-group my-2" style="max-width: 100px;">
			<button type="button" 
					class="btn btn-outline-dark dropdown-toggle" 
					data-bs-toggle="dropdown" 
					aria-expanded="false">
				Page Size
			</button>
			<ul class="dropdown-menu dropdown-menu-end shadow-sm" id="dropdown-menu-pageSize" style="max-height: 280px; overflow-y: auto;">
				
				<button class="dropdown-item btn btn-light w-100 mb-1" onclick="setPageSize(5)">
					5
				</button>
				<button class="dropdown-item btn btn-light w-100 mb-1" onclick="setPageSize(10)">
					10
				</button>
				<button class="dropdown-item btn btn-light w-100 mb-1" onclick="setPageSize(15)">
					15
				</button>
				<button class="dropdown-item btn btn-light w-100 mb-1" onclick="setPageSize(20)">
					20
				</button>
				<button class="dropdown-item btn btn-light w-100 mb-1" onclick="setPageSize(30)">
					30
				</button>
			</ul>
		</div>
		<!-- Pagination -->
		<% if (pagination && pagination.totalPages > 1) { %>
			<nav aria-label="Pagination" id="paginationNav">
				<ul class="pagination justify-content-center">
					<li class="page-item <%= pagination.page <= 1 ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page > 1 ? 'goToPage(1)' : '' %>><<</a>
					</li>
		   
					<li class="page-item <%= pagination.page <= 1 ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page > 1 ? 'goToPage(' + (pagination.page - 1) + ')' : '' %>><</a>
					</li>
		   
					<% if (pagination.page > 2) { %>
						<li class="page-item"><a class="page-link" onclick="goToPage(1)">1</a></li>
						<% if (pagination.page > 3) { %>
							<li class="page-item disabled"><a class="page-link">...</a></li>
						<% } %>
					<% } %>
					
					<% if (pagination.page > 1) { %>
						<% for (let i = Math.max(1, pagination.page - 1); i <= Math.min(parseInt(pagination.totalPages), parseInt(pagination.page) + 1); i++) { %>
							<li class="page-item <%= parseInt(i) === parseInt(pagination.page) ? 'active' : '' %>">
								<a class="page-link" onclick="goToPage('<%= i %>')"><%= i %></a>
							</li>
						<% } %>
					<% } else { %>
						<% for (let i = 1; i <= Math.min(2, pagination.totalPages); i++) { %>
							<li class="page-item <%= parseInt(i) === parseInt(pagination.page) ? 'active' : '' %>">
								<a class="page-link" onclick="goToPage('<%= i %>')"><%= i %></a>
							</li>
						<% } %>
					<% } %>
		   
					<% if (pagination.page < pagination.totalPages - 1) { %>
						<% if (pagination.page < pagination.totalPages - 2) { %>
							<li class="page-item disabled"><a class="page-link">...</a></li>
							<li class="page-item">
								<a class="page-link" onclick="goToPage('<%= pagination.totalPages %>')">
									<%= pagination.totalPages %>
								</a>
							</li>
						<% } else if (pagination.page < pagination.totalPages) { %>
							<li class="page-item">
								<a class="page-link" onclick="goToPage('<%= pagination.totalPages %>')">
									<%= pagination.totalPages %>
								</a>
							</li>
						<% } %>
					<% } %>
		   
					<li class="page-item <%= pagination.page >= pagination.totalPages ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page < pagination.totalPages ? 'goToPage(' + (parseInt(pagination.page) + 1) + ')' : '' %>>></a>
					</li>
		   
					<li class="page-item <%= pagination.page >= pagination.totalPages ? 'disabled' : '' %>">
						<a class="page-link" onclick=<%= pagination.page < pagination.totalPages ? 'goToPage(' + pagination.totalPages + ')' : '' %>>>></a>
					</li>
				</ul>
			</nav>
		<% } %>
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
		<script>

			let sortDirections = {};

			function sortTable(columnIndex, type, headerElement) {
				let table = document.getElementById("salespersonTable");
				let rows = Array.from(table.getElementsByTagName("tr"));
				let ascending = !sortDirections[columnIndex];
				sortDirections[columnIndex] = ascending;

				rows.sort((rowA, rowB) => {
					let cellA = rowA.getElementsByTagName("td")[columnIndex]?.innerText.trim() || "";
					let cellB = rowB.getElementsByTagName("td")[columnIndex]?.innerText.trim() || "";

					if (type === "number") {
						cellA = parseFloat(cellA.replace(/[^0-9.-]/g, "")) || 0;
						cellB = parseFloat(cellB.replace(/[^0-9.-]/g, "")) || 0;
						return ascending ? cellA - cellB : cellB - cellA;
					} else if (type === "date") {
						cellA = new Date(cellA).getTime() || 0;
						cellB = new Date(cellB).getTime() || 0;
						return ascending ? cellA - cellB : cellB - cellA;
					} else {
						return ascending ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);
					}
				});
				rows.forEach(row => table.appendChild(row));
				document.querySelectorAll("th span").forEach(span => span.innerHTML = "");
				headerElement.querySelector("span").innerHTML = ascending ? " ▲" : " ▼";
			}

			function goToPage(pageNumber) {
			    const baseUrl = new URL(window.location.href);
			    baseUrl.searchParams.set("page", pageNumber);
			    window.location.href = baseUrl.toString();
			}

			function setPageSize(pagesize) {
				let url = new URL(window.location.href);
			    if (pagesize && pagesize !== 10) {
			        url.searchParams.set("pageSize", pagesize);
					url.searchParams.delete("page");
			    } else {
			        url.searchParams.delete("pageSize");
					url.searchParams.delete("page");
			    }
			    window.location.href = url.toString();
			}

			function searchKey(event){
				if (event.key === 'Enter') {
					performSearch();
				}
			}

			function performSearch() {
			    let input = document.getElementById("searchInput").value.trim();
			    let url = new URL(window.location.href);
			    
			    if (input) {
			        url.searchParams.set("search", input);
					url.searchParams.delete("page");
			    } else {
			        url.searchParams.delete("search");
					url.searchParams.delete("page");
			    }
			    window.location.href = url.toString();
			}
			
			const form = document.getElementById('addNewsalespersonForm');
            const addButton = document.getElementById('addBtn');
            const inputs = form.querySelectorAll('.form-control[required]');

            function checkInputs(messageBox, inputField) {
                let allFilled = true;
                inputs.forEach(index => {
                if (!index.value.trim()) {
                    allFilled = false;
                }
                });
                addButton.disabled = !allFilled;
				const message = document.getElementById(messageBox)
				const input = document.getElementById(inputField)
				if (input.value.length === parseInt(input.maxLength)) {
			        message.classList.remove('d-none');
			    } else {
			        message.classList.add('d-none');
			    }
            }


            function submitForm(event) {
			    addButton.disabled = true;
			    addButton.textContent = 'Submitting...';
			}
			
			let deleteSalespersonId = null;

		    function setDeleteSalesperson(element) {
		        deleteSalespersonId = element.getAttribute("data-salesperson-id");
		    }

			function deleteConfirm() {
		        if (deleteSalespersonId ) {
		            window.location.href = `/subscriber/salesperson/delete/${deleteSalespersonId}`;
		        }
		    }

			function goToDirection(id, type) {
			    const pathname = window.location.pathname;
			    let newUrl;

			    if (type === 'restore') {
			        newUrl = `${pathname}/restore/${id}`;
			    }
			    if (newUrl) {
			        window.location.href = newUrl;
			    } else {
			        console.error('Invalid type provided');
			    }
			}

			function openUpdateModal(id, name) {
			    document.getElementById('salespersonId').value = id;
			    document.getElementById('updateSalespersonName').value = name;
			    new bootstrap.Modal(document.getElementById('updateSalesperson')).show();
			}

			function openEditModal(id, name) {
			    document.getElementById('salespersonId').value = id;
			    document.getElementById('updateSalespersonName').value = name;
			    new bootstrap.Modal(document.getElementById('updateSalesperson')).show();
			}

			function showUpdateModal(id, name) {
				document.getElementById("duplicateNameModal").remove();
			    
			    setTimeout(() => {
			        openEditModal(id, name);
			    }, 500);
			}

			const params = new URLSearchParams(window.location.search);
			if (params.get("type") === "duplicate-name") {
			    const id = params.get("id");
			    const name = params.get("name");
			    const status = params.get("status");
			    if (id && name && status) {
			        const modalElement = document.getElementById('duplicateNameModal');
			        if (modalElement) {
			            const modalBody = modalElement.querySelector('.modal-body p');
			            const modalFooter = modalElement.querySelector('.modal-footer');
			            modalFooter.innerHTML = '';

			            if (status === 'active') {
			                modalBody.innerHTML = `The salesperson name <strong>${name}</strong> already exists.`;
			                modalFooter.innerHTML = `
			                    <button type="button" class="btn btn-warning" onclick="showUpdateModal(${id}, '${name}')">Edit</button>
			                `;
			            } else if (status === 'deleted') {
			                modalBody.innerHTML = `The salesperson name <strong>${name}</strong> already exists. Do you want to restore?`;
			                modalFooter.innerHTML = `
			                    <button type="button" class="btn btn-danger" onclick="goToDirection(${id}, 'restore')">Restore</button>
			                `;
			            }
			            new bootstrap.Modal(modalElement).show();
			        } else {
			            console.error("Modal element not found.");
			        }
			    }
			}

			function checkUpdateInputs(messageBox, inputField) {
			    const updateForm = document.getElementById('updateSalespersonForm');
			    const updateButton = document.getElementById('updateBtn');
			    const inputs = updateForm.querySelectorAll('.form-control[required]');
			    
			    let allFilled = true;
			    inputs.forEach(input => {
			        if (!input.value.trim()) {
			            allFilled = false;
			        }
			    });
			    
			    updateButton.disabled = !allFilled;
			    const message = document.getElementById(messageBox);
			    const input = document.getElementById(inputField);
			    
			    if (input.value.length === parseInt(input.maxLength)) {
			        message.classList.remove('d-none');
			    } else {
			        message.classList.add('d-none');
			    }
			}

			function submitUpdateForm(event) {
			    event.preventDefault();
			    const updateButton = document.getElementById('updateBtn');
			    const salespersonId = document.getElementById('salespersonId').value;
			    const name = document.getElementById('updateSalespersonName').value;
			    const form = document.getElementById('updateSalespersonForm');
			    
			    if (name && name.trim()) {
			        updateButton.disabled = true;
			        updateButton.textContent = 'Updating...';
			        const submitForm = document.createElement('form');
			        submitForm.method = 'POST';
			        submitForm.action = `/subscriber/salesperson/update/${salespersonId}`;

			        const nameInput = document.createElement('input');
			        nameInput.type = 'hidden';
			        nameInput.name = 'name';
			        nameInput.value = name;
			        submitForm.appendChild(nameInput);

			        const urlParams = new URLSearchParams(window.location.search);
			        const currentPage = urlParams.get('page') || 1;
			        const pageInput = document.createElement('input');
			        pageInput.type = 'hidden';
			        pageInput.name = 'page';
			        pageInput.value = currentPage;
			        submitForm.appendChild(pageInput);

			        document.body.appendChild(submitForm);
			        submitForm.submit();
			    }
			}

		</script>
        <%- include('../partials/subscriber/footer.ejs') %>